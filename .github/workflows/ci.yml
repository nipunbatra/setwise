name: Setwise CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install TinyTeX and minimal LaTeX packages
      run: |
        wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
        echo "export PATH=$HOME/.TinyTeX/bin/x86_64-linux:$PATH" >> $GITHUB_ENV
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        # Install only packages we actually use
        tlmgr install amsmath amsfonts amssymb enumitem geometry float
        tlmgr install pgf tikz xcolor fancyhdr booktabs tcolorbox 
        tlmgr install lmodern graphics graphicx inputenc fontenc
        tlmgr install latex latex-bin latex-fonts
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-xvfb  # For matplotlib in headless environment
    
    - name: Generate test figures
      run: |
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        python generate_figures.py
    
    - name: Run tests with pytest
      run: |
        python -m pytest test_main.py -v --tb=short --cov=main --cov-report=xml --cov-report=term-missing
      env:
        DISPLAY: ":99.0"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy
    
    - name: Run black
      run: black --check --diff .
      continue-on-error: true
    
    - name: Run flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true
    
    - name: Run isort
      run: isort --check-only --diff .
      continue-on-error: true

  integration:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install TinyTeX and minimal LaTeX packages
      run: |
        wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
        echo "export PATH=$HOME/.TinyTeX/bin/x86_64-linux:$PATH" >> $GITHUB_ENV
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        # Install only packages we actually use
        tlmgr install amsmath amsfonts amssymb enumitem geometry float
        tlmgr install pgf tikz xcolor fancyhdr booktabs tcolorbox 
        tlmgr install lmodern graphics graphicx inputenc fontenc
        tlmgr install latex latex-bin latex-fonts
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate figures
      run: |
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        python generate_figures.py
    
    - name: Test full quiz generation
      run: |
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        python main.py --seed 42 --sets 2 --mcq 3 --subjective 2 --no-pdf
        ls -la output/
        
    - name: Verify output files
      run: |
        test -f output/quiz_set_1.tex
        test -f output/quiz_set_2.tex
        test -f output/answer_key_1.txt
        test -f output/answer_key_2.txt
        echo "All output files generated successfully!"
    
    - name: Upload quiz artifacts
      uses: actions/upload-artifact@v4
      with:
        name: generated-quizzes
        path: output/
        retention-days: 30