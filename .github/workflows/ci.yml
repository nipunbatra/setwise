name: Setwise CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov pytest-xdist coverage
    
    - name: Run comprehensive pre-test validation
      run: |
        python test_all.py
    
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=setwise --cov-report=xml --cov-report=html --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Test CLI functionality
      run: |
        setwise --help
        setwise generate --help
    
    - name: Test package import
      run: |
        python -c "from setwise import QuizGenerator; print('✅ Package import successful')"
    
    - name: Generate sample quiz (no LaTeX compilation)
      run: |
        setwise generate --sets 1 --output-dir test_output --no-compile
        ls -la test_output/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Check code formatting with black
      run: |
        black --check --diff setwise/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff setwise/
    
    - name: Lint with flake8
      run: |
        flake8 setwise/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 setwise/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type checking with mypy
      run: |
        mypy setwise/ --ignore-missing-imports || true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run bandit security scan
      run: |
        bandit -r setwise/ -f json -o bandit-report.json || true
        bandit -r setwise/ || true
    
    - name: Check for known security vulnerabilities
      run: |
        safety check || true

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import setwise; print('✅ Package installation successful')"