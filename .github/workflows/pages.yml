name: Deploy Quarto Site

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install TinyTeX and system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils imagemagick
        wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
        echo "export PATH=$HOME/.TinyTeX/bin/x86_64-linux:$PATH" >> $GITHUB_ENV
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        # Install only packages we need that aren't already included
        tlmgr install enumitem pgf xcolor fancyhdr booktabs tcolorbox || true
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Configure ImageMagick for PDF conversion
      run: |
        sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml
    
    - name: Generate figures and sample PDFs
      run: |
        export PATH="$HOME/.TinyTeX/bin/x86_64-linux:$PATH"
        python generate_figures.py
        python main.py --seed 42 --sets 2 --mcq 4 --subjective 3
        ls -la output/
    
    - name: Convert PDF to images for preview
      run: |
        mkdir -p assets/images
        # Convert all pages of both PDFs to PNG with high quality
        if [ -f output/quiz_set_1.pdf ]; then
          pdftoppm -png -r 200 output/quiz_set_1.pdf assets/images/quiz_set_1_page
          pdftoppm -png -r 200 output/quiz_set_2.pdf assets/images/quiz_set_2_page
          echo "PDF pages converted to PNG previews"
        else
          echo "PDF not found, creating placeholder"
          mkdir -p assets/images
          # Create a placeholder image
          convert -size 800x600 xc:lightblue -gravity center -pointsize 36 -annotate +0+0 "Quiz Preview\n(PDF compilation required)" assets/images/quiz_preview.png
        fi
    
    - name: Copy PDFs to assets
      run: |
        mkdir -p assets
        if [ -f output/quiz_set_1.pdf ]; then
          cp output/quiz_set_1.pdf assets/
          cp output/quiz_set_2.pdf assets/
          echo "PDFs copied to assets"
        fi
    
    - name: Setup Quarto
      uses: quarto-dev/quarto-actions/setup@v2
      with:
        version: pre-release
    
    - name: Render Quarto site
      run: |
        echo "Rendering Quarto site..."
        quarto render
        echo "Quarto render completed"
        
        echo "Files in _site directory:"
        ls -la _site/
        
        echo "Checking for assets:"
        find _site -name "*.png" -o -name "*.pdf" | head -10
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Verify deployment
      run: |
        echo "üöÄ Deployment completed!"
        echo "üì° Site URL: ${{ steps.deployment.outputs.page_url }}"
        echo "üîó Direct link: https://nipunbatra.github.io/setwise/"
        
        # Wait a moment and try to curl the site
        sleep 30
        echo "üåê Testing site accessibility..."
        curl -I https://nipunbatra.github.io/setwise/ || echo "‚ùå Site not accessible yet"