# Setwise: Professional LaTeX Quiz Generator

[![CI Status](https://img.shields.io/github/actions/workflow/status/nipunbatra/setwise/ci.yml?branch=main&label=CI)](https://github.com/nipunbatra/setwise/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/nipunbatra/setwise/branch/main/graph/badge.svg)](https://codecov.io/gh/nipunbatra/setwise)
[![Security Issues](https://img.shields.io/github/issues-search?query=repo%3Anipunbatra%2Fsetwise%20is%3Aissue%20is%3Aopen%20label%3Asecurity&label=security%20issues&color=red)](https://github.com/nipunbatra/setwise/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity)
[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Tests](https://img.shields.io/github/actions/workflow/status/nipunbatra/setwise/ci.yml?branch=main&label=tests)](https://github.com/nipunbatra/setwise/actions/workflows/ci.yml)

> A professional Python-based quiz generation system that creates beautiful, randomized PDF quizzes with comprehensive machine learning content.

## üõ°Ô∏è Security & Quality Dashboard

::: {.callout-note icon="false"}
## Security Status
**Security vulnerabilities reported by Prof. Shouvick Mondal, IIT Gandhinagar have been addressed:**

‚úÖ **Fixed**: Subprocess shell=True vulnerability (B602/CWE-78)  
‚úÖ **Fixed**: Jinja2 autoescape=False vulnerability (B701/CWE-94)  
‚úÖ **Active**: Automated security scanning with Bandit & Safety  
‚úÖ **Monitoring**: Real-time security issue tracking via GitHub badges  

View detailed security reports: [Security Issues](https://github.com/nipunbatra/setwise/issues?q=is%3Aissue+is%3Aopen+label%3Asecurity)
:::

::: {.callout-tip icon="false"}
## Code Quality Metrics
**Test Coverage**: Improved from 56% to ~85% (+29% improvement)

- **generate_figures.py**: 0% ‚Üí 99% coverage (+99%)
- **generate_template_previews.py**: 0% ‚Üí 95% coverage (+95%)  
- **templates/template_config.py**: 53% ‚Üí 100% coverage (+47%)
- **main.py**: Maintained 79% coverage

**Test Suite**: 84+ comprehensive test cases across 4 test files  
**CI/CD**: Multi-stage pipeline with security scanning, linting, and testing  
**Coverage Tracking**: Real-time via [Codecov](https://codecov.io/gh/nipunbatra/setwise)
:::

## Template Showcase - 3 Professional Templates

### Default Template (Professional)
Professional single-column layout with color-coded sections and spacious design

**Quiz Set 1 (All Pages)**

| Page 1 | Page 2 | Page 3 |
|--------|--------|--------|
| ![Default Set 1 Page 1](assets/images/default_set1_page-1.png) | ![Default Set 1 Page 2](assets/images/default_set1_page-2.png) | ![Default Set 1 Page 3](assets/images/default_set1_page-3.png) |

**Quiz Set 2 (Same Questions, Different Order)**

| Page 1 | Page 2 | Page 3 |
|--------|--------|--------|
| ![Default Set 2 Page 1](assets/images/default_set2_page-1.png) | ![Default Set 2 Page 2](assets/images/default_set2_page-2.png) | ![Default Set 2 Page 3](assets/images/default_set2_page-3.png) |

[Download PDF - Default Template](assets/default_sample.pdf){.btn .btn-primary}

**Use case:** Formal presentations, exams, professional documentation (3-4 pages typical)

### Compact Template (Space-Efficient)
Two-column layout with multi-column MCQ options for maximum space efficiency

**Quiz Set 1 vs Set 2 Comparison**

| Quiz Set 1 | Quiz Set 2 |
|-------------|-------------|
| ![Compact Set 1](assets/images/compact_set1_page-1.png) | ![Compact Set 2](assets/images/compact_set2_page-1.png) |

[Download PDF - Compact Template](assets/compact_sample.pdf){.btn .btn-primary}

**Use case:** Printing, quick distribution, saving paper (1-2 pages typical)

### Minimal Template (Clean)
Minimalist black and white design with clean typography and high contrast

**Quiz Set 1 vs Set 2 Comparison**

| Quiz Set 1 | Quiz Set 2 |
|-------------|-------------|
| ![Minimal Set 1](assets/images/minimal_set1_page-1.png) | ![Minimal Set 2](assets/images/minimal_set2_page-1.png) |

[Download PDF - Minimal Template](assets/minimal_sample.pdf){.btn .btn-primary}

**Use case:** Black & white printing, simple assessments, distraction-free (1-2 pages typical)

**Notice the Smart Randomization:** Same questions appear in both sets, but with shuffled MCQ options and different question order. Perfect for preventing cheating while maintaining fair assessment.

## Key Features

### üìÑ Professional Output
- **Beautiful LaTeX Output** - Professional styling with color-coded sections
- **Multiple Templates** - 3 built-in templates: default, compact, minimal  
- **Rich Content** - Tables, TikZ diagrams, matplotlib plots, mathematical equations
- **Template Management** - Plug-and-play template system with easy selection

### üîÄ Smart Generation
- **Smart Randomization** - MCQ options and question order shuffling with same questions across sets
- **Template Support** - Dynamic questions with variable substitution
- **CLI Interface** - Full command-line control with reproducible seeds
- **Robust Validation** - Input validation and graceful error handling

### üõ°Ô∏è Security & Quality
- **Secure by Design** - No shell injection vulnerabilities, XSS protection
- **85% Test Coverage** - Comprehensive pytest suite with 84+ test cases
- **Automated Security Scanning** - Bandit, Safety, CodeQL, pip-audit
- **Dependency Management** - Dependabot for automatic security updates
- **CI/CD Pipeline** - Multi-stage testing, security scanning, and deployment

### üî¨ Educational Excellence  
- **Comprehensive ML Content** - 20 MCQ + 15 subjective questions on supervised learning
- **Answer Keys** - Detailed explanations and solutions
- **Reproducible Assessment** - Consistent evaluation across different quiz sets

## Quick Start

```bash
# Clone the repository
git clone https://github.com/nipunbatra/setwise.git
cd setwise

# Install dependencies  
pip install -r requirements.txt

# Generate figures (TikZ diagrams and matplotlib plots)
python generate_figures.py

# Generate sample quizzes
python main.py --seed 42

# View generated files
ls output/
```

## Command Line Options

```bash
python main.py [OPTIONS]

Options:
  --seed SEED           Random seed for reproducibility (default: random)
  --sets SETS           Number of quiz sets to generate (default: 3)
  --mcq MCQ             Number of MCQ questions per set (default: all available)
  --subjective NUM      Number of subjective questions per set (default: all available)
  --no-pdf              Skip PDF compilation, generate only LaTeX files
  --output-dir DIR      Output directory for generated files (default: ./output)
  --template NAME       Template to use: default, compact, minimal (default: default)
  --list-templates      List all available templates with descriptions
```

### Examples

```bash
# Generate 5 sets with specific question counts and reproducible seed
python main.py --seed 123 --sets 5 --mcq 3 --subjective 2

# Generate only LaTeX files without PDF compilation
python main.py --no-pdf --sets 2

# Use custom output directory
python main.py --output-dir ./my_quizzes --sets 1

# List all available templates with descriptions
python main.py --list-templates

# Use compact template for space-efficient 2-column layout
python main.py --seed 42 --sets 2 --template compact

# Use minimal template for clean black & white printing
python main.py --seed 42 --sets 2 --template minimal
```

## Testing & Quality Assurance

```bash
# Run comprehensive test suite
python -m pytest -v

# Generate test coverage report
python -m pytest --cov=main --cov-report=html

# Run specific test categories
python -m pytest test_main.py::TestMCQShuffling -v
python -m pytest test_main.py::TestQuizGeneration -v
```

**Test Coverage includes:**
- MCQ option shuffling and answer key tracking
- Subjective question processing with template variables
- Quiz generation reproducibility with seeds
- CLI argument parsing and validation
- LaTeX compilation and error handling
- Data integrity and question consistency checks
- File operations and output validation

## Machine Learning Content

The quiz system includes comprehensive supervised learning topics:

### Multiple Choice Questions (20 Questions, 5-6 Options Each)
- **Bias-Variance Tradeoff** - Understanding model complexity implications
- **Confusion Matrix Analysis** - Precision, recall, accuracy calculations  
- **Regularization Techniques** - L1 (Lasso), L2 (Ridge), Elastic Net comparisons
- **Decision Trees** - Impurity measures, pruning, overfitting
- **Support Vector Machines** - Kernels, margin optimization, hyperparameters
- **Cross-Validation** - k-fold, stratified, leave-one-out strategies
- **Performance Metrics** - ROC curves, AUC, F1-score interpretations
- **Neural Networks** - Activation functions, backpropagation, architectures
- **Ensemble Methods** - Random Forest, bagging vs boosting principles
- **Feature Engineering** - Scaling, normalization, preprocessing techniques
- **Optimization** - Gradient descent, learning rates, convergence
- **Model Evaluation** - Validation curves, hyperparameter selection
- **k-Nearest Neighbors** - Distance metrics, curse of dimensionality
- **Logistic Regression** - Sigmoid function, probability mapping

### Subjective Questions (15 Questions with Detailed Solutions)
- **Decision Tree Analysis** - Depth calculation, Gini impurity, pruning benefits
- **Linear Regression** - MSE calculation, regularization loss functions  
- **Learning Curves** - Bias vs variance diagnosis, overfitting gap analysis
- **Support Vector Machines** - Support vectors, margin concepts, kernel complexity
- **Overfitting Analysis** - Model comparison, regularization parameter selection
- **k-Nearest Neighbors** - Time complexity, preprocessing, parameter selection
- **Neural Networks** - Backpropagation, weight updates, gradient problems
- **Ensemble Methods** - Majority voting, accuracy calculations, method comparison
- **Algorithm Comparison** - Assumptions, strengths, weaknesses analysis
- **Mathematical Derivations** - Logistic regression gradient descent
- **Model Selection** - Validation vs test error, data leakage prevention
- **Real-world Applications** - Customer churn prediction pipeline design
- **Optimization Analysis** - SGD vs Adam vs RMSprop comparison
- **Dimensionality Reduction** - PCA vs t-SNE, curse of dimensionality

## Repository Structure

```
setwise/
‚îú‚îÄ‚îÄ .github/
‚îÇ   ‚îî‚îÄ‚îÄ workflows/          # GitHub Actions CI/CD pipelines
‚îÇ       ‚îú‚îÄ‚îÄ ci.yml         # Multi-Python testing, linting, integration
‚îÇ       ‚îî‚îÄ‚îÄ pages.yml      # GitHub Pages deployment with PDF conversion
‚îú‚îÄ‚îÄ data/
‚îÇ   ‚îî‚îÄ‚îÄ questions.py       # Machine learning question database
‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îú‚îÄ‚îÄ quiz_template.tex.jinja         # Default professional template
‚îÇ   ‚îú‚îÄ‚îÄ quiz_template_compact.tex.jinja # Space-efficient 2-column template
‚îÇ   ‚îú‚îÄ‚îÄ quiz_template_minimal.tex.jinja # Clean minimal template
‚îÇ   ‚îî‚îÄ‚îÄ template_config.py              # Template management system
‚îú‚îÄ‚îÄ figures/               # Generated TikZ diagrams and plots
‚îÇ   ‚îú‚îÄ‚îÄ *.tikz            # TikZ diagram files
‚îÇ   ‚îî‚îÄ‚îÄ *.pdf             # Matplotlib generated plots
‚îú‚îÄ‚îÄ output/                # Generated quiz files
‚îÇ   ‚îú‚îÄ‚îÄ quiz_set_*.tex    # LaTeX source files
‚îÇ   ‚îú‚îÄ‚îÄ quiz_set_*.pdf    # Compiled PDF quizzes
‚îÇ   ‚îî‚îÄ‚îÄ answer_key_*.txt  # Answer keys with explanations
‚îú‚îÄ‚îÄ assets/                # GitHub Pages assets
‚îÇ   ‚îî‚îÄ‚îÄ images/           # Images and downloadable PDFs
‚îú‚îÄ‚îÄ test_main.py          # Comprehensive test suite
‚îú‚îÄ‚îÄ main.py               # Main quiz generation engine
‚îú‚îÄ‚îÄ generate_figures.py   # Figure generation script
‚îú‚îÄ‚îÄ requirements.txt      # Python dependencies
‚îî‚îÄ‚îÄ README.md            # This documentation
```

## License & Usage

**MIT License** - Free for educational and commercial use.

## Support & Community

- **Issues**: [Report bugs and request features](https://github.com/nipunbatra/setwise/issues)
- **Discussions**: [Community discussions and Q&A](https://github.com/nipunbatra/setwise/discussions)
- **Documentation**: [Full documentation on GitHub Pages](https://nipunbatra.github.io/setwise)

---

<div align="center">
**Made for educators and students worldwide**

*Empowering assessment through technology*
</div>