# Setwise: Professional LaTeX Quiz Generator

[![CI Status](https://github.com/nipunbatra/setwise/workflows/Setwise%20CI/badge.svg)](https://github.com/nipunbatra/setwise/actions)
[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Tests](https://img.shields.io/badge/tests-22%20passed-brightgreen.svg)](https://github.com/nipunbatra/setwise/actions)

> A professional Python-based quiz generation system that creates beautiful, randomized PDF quizzes with comprehensive machine learning content.

## Sample Quiz Sets - Visual Comparison

### Quiz Set 1 (All Pages)
::: {layout-ncol=2}
![Quiz Set 1 Page 1](assets/images/quiz_set_1_page-1.png){width=400}

![Quiz Set 1 Page 2](assets/images/quiz_set_1_page-2.png){width=400}

![Quiz Set 1 Page 3](assets/images/quiz_set_1_page-3.png){width=400}

![Quiz Set 1 Page 4](assets/images/quiz_set_1_page-4.png){width=400}
:::

[Download PDF - Quiz Set 1](assets/quiz_set_1.pdf){.btn .btn-primary}

### Quiz Set 2 (All Pages) 
::: {layout-ncol=2}
![Quiz Set 2 Page 1](assets/images/quiz_set_2_page-1.png){width=400}

![Quiz Set 2 Page 2](assets/images/quiz_set_2_page-2.png){width=400}

![Quiz Set 2 Page 3](assets/images/quiz_set_2_page-3.png){width=400}

![Quiz Set 2 Page 4](assets/images/quiz_set_2_page-4.png){width=400}
:::

[Download PDF - Quiz Set 2](assets/quiz_set_2.pdf){.btn .btn-primary}

**Notice the Smart Randomization:** Same questions appear in both sets, but with shuffled MCQ options and different question order. Templated subjective questions show different variable values while maintaining identical structure.

## Key Features

- **Beautiful LaTeX Output** - Professional styling with color-coded sections
- **Smart Randomization** - MCQ options and question order shuffling with same questions across sets
- **Template Support** - Dynamic questions with variable substitution
- **Rich Content** - Tables, TikZ diagrams, matplotlib plots, mathematical equations
- **CLI Interface** - Full command-line control with reproducible seeds
- **100% Tested** - Comprehensive pytest suite with 22+ test cases
- **CI/CD Ready** - GitHub Actions for testing and deployment
- **Layout Options** - Normal (professional) or compact (space-efficient) templates
- **Robust Validation** - Input validation and graceful error handling

## Quick Start

```bash
# Clone the repository
git clone https://github.com/nipunbatra/setwise.git
cd setwise

# Install dependencies  
pip install -r requirements.txt

# Generate figures (TikZ diagrams and matplotlib plots)
python generate_figures.py

# Generate sample quizzes
python main.py --seed 42

# View generated files
ls output/
```

## Command Line Options

```bash
python main.py [OPTIONS]

Options:
  --seed SEED           Random seed for reproducibility (default: random)
  --sets SETS           Number of quiz sets to generate (default: 3)
  --mcq MCQ             Number of MCQ questions per set (default: all available)
  --subjective NUM      Number of subjective questions per set (default: all available)
  --no-pdf              Skip PDF compilation, generate only LaTeX files
  --output-dir DIR      Output directory for generated files (default: ./output)
```

### Examples

```bash
# Generate 5 sets with specific question counts and reproducible seed
python main.py --seed 123 --sets 5 --mcq 3 --subjective 2

# Generate only LaTeX files without PDF compilation
python main.py --no-pdf --sets 2

# Use custom output directory
python main.py --output-dir ./my_quizzes --sets 1
```

## Testing & Quality Assurance

```bash
# Run comprehensive test suite
python -m pytest -v

# Generate test coverage report
python -m pytest --cov=main --cov-report=html

# Run specific test categories
python -m pytest test_main.py::TestMCQShuffling -v
python -m pytest test_main.py::TestQuizGeneration -v
```

**Test Coverage includes:**
- MCQ option shuffling and answer key tracking
- Subjective question processing with template variables
- Quiz generation reproducibility with seeds
- CLI argument parsing and validation
- LaTeX compilation and error handling
- Data integrity and question consistency checks
- File operations and output validation

## Machine Learning Content

The quiz system includes comprehensive supervised learning topics:

### Multiple Choice Questions (20 Questions, 5-6 Options Each)
- **Bias-Variance Tradeoff** - Understanding model complexity implications
- **Confusion Matrix Analysis** - Precision, recall, accuracy calculations  
- **Regularization Techniques** - L1 (Lasso), L2 (Ridge), Elastic Net comparisons
- **Decision Trees** - Impurity measures, pruning, overfitting
- **Support Vector Machines** - Kernels, margin optimization, hyperparameters
- **Cross-Validation** - k-fold, stratified, leave-one-out strategies
- **Performance Metrics** - ROC curves, AUC, F1-score interpretations
- **Neural Networks** - Activation functions, backpropagation, architectures
- **Ensemble Methods** - Random Forest, bagging vs boosting principles
- **Feature Engineering** - Scaling, normalization, preprocessing techniques
- **Optimization** - Gradient descent, learning rates, convergence
- **Model Evaluation** - Validation curves, hyperparameter selection
- **k-Nearest Neighbors** - Distance metrics, curse of dimensionality
- **Logistic Regression** - Sigmoid function, probability mapping

### Subjective Questions (15 Questions with Detailed Solutions)
- **Decision Tree Analysis** - Depth calculation, Gini impurity, pruning benefits
- **Linear Regression** - MSE calculation, regularization loss functions  
- **Learning Curves** - Bias vs variance diagnosis, overfitting gap analysis
- **Support Vector Machines** - Support vectors, margin concepts, kernel complexity
- **Overfitting Analysis** - Model comparison, regularization parameter selection
- **k-Nearest Neighbors** - Time complexity, preprocessing, parameter selection
- **Neural Networks** - Backpropagation, weight updates, gradient problems
- **Ensemble Methods** - Majority voting, accuracy calculations, method comparison
- **Algorithm Comparison** - Assumptions, strengths, weaknesses analysis
- **Mathematical Derivations** - Logistic regression gradient descent
- **Model Selection** - Validation vs test error, data leakage prevention
- **Real-world Applications** - Customer churn prediction pipeline design
- **Optimization Analysis** - SGD vs Adam vs RMSprop comparison
- **Dimensionality Reduction** - PCA vs t-SNE, curse of dimensionality

## Repository Structure

```
setwise/
├── .github/
│   └── workflows/          # GitHub Actions CI/CD pipelines
│       ├── ci.yml         # Multi-Python testing, linting, integration
│       └── pages.yml      # GitHub Pages deployment with PDF conversion
├── data/
│   └── questions.py       # Machine learning question database
├── templates/
│   └── quiz_template.tex.jinja  # Professional LaTeX template
├── figures/               # Generated TikZ diagrams and plots
│   ├── *.tikz            # TikZ diagram files
│   └── *.pdf             # Matplotlib generated plots
├── output/                # Generated quiz files
│   ├── quiz_set_*.tex    # LaTeX source files
│   ├── quiz_set_*.pdf    # Compiled PDF quizzes
│   └── answer_key_*.txt  # Answer keys with explanations
├── assets/                # GitHub Pages assets
│   └── images/           # Images and downloadable PDFs
├── test_main.py          # Comprehensive test suite
├── main.py               # Main quiz generation engine
├── generate_figures.py   # Figure generation script
├── requirements.txt      # Python dependencies
└── README.md            # This documentation
```

## License & Usage

**MIT License** - Free for educational and commercial use.

## Support & Community

- **Issues**: [Report bugs and request features](https://github.com/nipunbatra/setwise/issues)
- **Discussions**: [Community discussions and Q&A](https://github.com/nipunbatra/setwise/discussions)
- **Documentation**: [Full documentation on GitHub Pages](https://nipunbatra.github.io/setwise)

---

<div align="center">
**Made for educators and students worldwide**

*Empowering assessment through technology*
</div>